Chocolate Feast - 

n = 15
c = 3
m = 2

n = money 15$
c = cost to buy a chocolate
m = Extra bar for wrapper exchange

Overall Eaten -

for 15$ - 5 chocalates with 3$ each
He has 5 chocolates and 5 wrappers.
He can have an extra chocolate with 2 extra wrappers 


t = no. of test cases
n = no. of rupees or dollars
c = cost to buy chocolate
m = To buy an extra bar with an exchange of wrapper



t = int(input())
i = 0
while i < t:
	n,c,m = map(int,input().split())
	choc = n // c
	wr   = n // c
	while wr >= m:
		choc+= wr // m
		wr   = (wr // m) + (wr % m)
	print(choc)
	i+= 1




Angry Professor - 


n = 5
k = 3
a = [-2 -1 0 1 2]

Teacher has a class strength of 5 students and he is frustrated with their lack of discipline. The professor decides to cancel 
class if fewer than some number of students are present when class starts.

n = students class strength
k = atleast these number of students to be present when the professor enters into the class. 
If k satisfies the output is NO ie., the class goes on
else the output is YES ie., the class will not goes on

a[i] --> non-positive time indicates the student arrived early on time a[i] < 0
	 a[i] = 0 It is the arrival of on time.
	 positive arrival time indicates the student arrived a[i] minutes late

// My Code

t = int(input())
i = 0
while i < t:
    n, k = map(int,input().split())
    a    = list(map(int,input().split()))
    j = 0
    b = 0
    while a[j] <= 0:
        b += 1
        j += 1
    if b >= k:
        print("NO")
    else:
        print("YES")
    i += 1

// Correct Code

t = int(input())
i = 0
while i < t:
    n, k = map(int,input().split())
    a    = [int(x) for x in input().split()]
    j = 0
    b = 0
    for j in range(n):
        if a[j] <= 0:
            b += 1
    if b >= k:
        print("NO")
    else:
        print("YES")
    i += 1




Utopian Tree - 

The Utopian Tree goes through 2 cycles of growth every year.
Each spring, it doubles in height. Each summer, its height increases by 1 meter.

Period  Height
0          1
1          2
2          3
3          6
4          7
5          14

Initially height h = 1

for every even number --> The height may increase to 1
for every odd number  --> The height may doubles 

t = int(input())
i = 0

while i < t:
    h = 1
    n = int(input())
    for j in range(1, n+1):
        if j%2 == 0:
            h += 1
        else:
            h *= 2
    print(h)
    i += 1





Explaination of for loop :

for i in range(1,10,2):
	 stmts //

here i is the variable to iterate through the loop
here 2 is the value of the variable to start the loop
her 10 is the value of the variable to stop  the loop
here 2 is the value of the variable to step  the loop



STRINGS - 

S = 'abcdefghij'
print(s[1:10:3]) --> beh
print(s[-10:-1:3]) --> adg




s = 'MALAYALAM'
if s == s[::-1]: print("Palindrome")
else: print("Not Palindrome")


Capitalize - 

def solve(s):
	op = ''
	for i in range(len(s)):
		if i == 0 and s[i].isalpha():
			op += s[i].upper()	
		elif s[i-1] == ' ' and s[i].isalpha():
			op += s[i].upper()
		else:
			op += s[i]
	return s


String Methods - 

1. capitalize()
2. casefold()
3. center()
4. count()
5. encode()
6. endswith()
7. expandtabs()
8. find()
9. format()
10. index()
11. isalnum()
12. isalpha()
13. isdecimal()
14. isdigit()
15. isidentifier()
16. islower()
17. isnumeric()
18. isprintable()
19. isspace()
20. istitle()
21. isupper()
22. join()
23. ljust()
24. lower()
25. lstrip()
26. partition()
27. replace()
28. rfind()
29. rindex()
30. rjust()
31. rpartition()
32. rsplit()
33. rstrip()
34. split()
35. swapcase()
36. title()
37. translate()
38. upper()
39. zfill()
40. decode()