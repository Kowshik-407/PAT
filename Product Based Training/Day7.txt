Day 7 
---------------

Nqueens - 

def safe(l,row,col,n):
    i=row-1;j=col
    while i>=0:
        if l[i][j]:
            return False
        i-=1
    i=row-1;j=col-1
    while i>=0 and j>=0:
        if l[i][j]:
            return False
        i-=1;j-=1
    i=row-1;j=col+1
    while i>=0 and j<n:
        if l[i][j]:
            return False
        i-=1;j+=1
    return True
def prit(l,row,n):
    if row==n:
        for i in range(n):
            for j in range(n):
                print(l[i][j],end='')
        print()
        return
def nq(l,row,n):
    if row==n:
        prit(l,row,n)
    for i in range(n):
        if safe(l,row,i,n):
            l[row][i]=1
            nq(l,row+1,n)
            l[row][i]=0
n=int(input())
l=[[0 for i in range(n)]for j in range(n)]
nq(l,0,n)

Rat in a maze - 


def mhelp(l,ans,n,x,y):
    if x==n-1 and y==n-1:
        ans[x][y]=1
        for i in range(n):
            for j in range(n):
                print(ans[i][j],end='')
        print()
        return
    if x>=n or x<0 or y<0 or y>=n or l[x][y]==0 or ans[x][y]==1:
        return
    ans[x][y]=1
    mhelp(l,ans,n,x-1,y)
    mhelp(l,ans,n,x+1,y)
    mhelp(l,ans,n,x,y-1)
    mhelp(l,ans,n,x,y+1)
    ans[x][y]=0
def rat(l,n):
    ans=[[0 for i in range(n)]for j in range(n)]
    mhelp(l,ans,n,0,0)


n=int(input())
a=[[int(x) for x in input().split()]for i in range(n)]
rat(a,n)